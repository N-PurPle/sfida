
language: cpp

sudo: required

cache:
  apt: true

addons:
  apt: &apt_common
    sources: &apt_common_sources
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.8
    - kalakris-cmake
    packages: &apt_common_packages
    - cmake
    - g++-5
    - gcc-5
    - clang-3.8

matrix:
  fast_finish: true
  include:
    # linux gcc 5 Debug build with coverage
    - os: linux
      compiler: gcc
      env: COMPILER_NAME=GCC-5 SFIDA_BUILD_CONFIG=COVERAGE
      addons:
        apt: *apt_common
    # linux gcc 5 Debug build
    - os: linux
      compiler: gcc
      env: COMPILER_NAME=GCC-5 SFIDA_BUILD_TYPE=Debug SFIDA_BUILD_CONFIG=NORMAL
      addons:
        apt: *apt_common
    # linux gcc 5 Release build
    - os: linux
      compiler: gcc
      env: COMPILER_NAME=GCC-5 SFIDA_BUILD_TYPE=Release SFIDA_BUILD_CONFIG=NORMAL
      addons:
        apt: *apt_common
    # linux clang 3.8 Debug scan-build
    - os: linux
      compiler: clang
      env: COMPILER_NAME=CLANG-3.8 SFIDA_BUILD_CONFIG=SCAN
      addons:
        apt: *apt_common
    # linux clang 3.8 Debug build
    - os: linux
      compiler: clang
      env: COMPILER_NAME=CLANG-3.8 SFIDA_BUILD_TYPE=Debug SFIDA_BUILD_CONFIG=NORMAL
      addons:
        apt: *apt_common
    # linux clang 3.8 Release build
    - os: linux
      compiler: clang
      env: COMPILER_NAME=CLANG-3.8 SFIDA_BUILD_TYPE=Release SFIDA_BUILD_CONFIG=NORMAL
      addons:
        apt: *apt_common


install:
- git submodule update --init --depth 1
- if [ "${SFIDA_BUILD_CONFIG}" = 'COVERAGE' ]; then pip install --user cpp-coveralls; fi
- export PATH=$HOME/.local/bin:$PATH

before_script:
- |
  if [ "${COMPILER_NAME}" = 'GCC-5' ]; then
    export CC=gcc-5
    export CXX=g++-5
    export CCOV=gcov-5
  fi
  if [ "${COMPILER_NAME}" = 'CLANG-3.8' ] && [ "${TRAVIS_OS_NAME}" = 'linux' ]; then
    export CC=clang-3.8
    export CXX=clang++-3.8
  fi

script:
- |
  echo "${TRAVIS_OS_NAME} ${CXX} ${SFIDA_BUILD_TYPE} ${SFIDA_BUILD_CONFIG} build..."
  if [ "${SFIDA_BUILD_CONFIG}" = 'COVERAGE' ]; then
    cd ${TRAVIS_BUILD_DIR}
    cmake -DCMAKE_BUILD_TYPE=Debug .
    cmake --build . --config Debug
    ctest --output-on-failure
  fi
  if [ "${SFIDA_BUILD_CONFIG}" = 'NORMAL' ]; then
    cd ${TRAVIS_BUILD_DIR}
    mkdir build && cd build
    cmake -DCMAKE_BUILD_TYPE=${SFIDA_BUILD_TYPE} ..
    cmake --build . --config ${SFIDA_BUILD_TYPE}
    ctest --output-on-failure
  fi
  if [ "${SFIDA_BUILD_CONFIG}" = 'SCAN' ]; then
    cd ${TRAVIS_BUILD_DIR}
    mkdir build && cd build
    scan-build cmake -DCMAKE_BUILD_TYPE=Debug ..
    scan-build cmake --build . --config Debug
  fi

after_success:
- |
  if [ "${SFIDA_BUILD_CONFIG}" = 'COVERAGE' ]; then
    cd ${TRAVIS_BUILD_DIR}
    coveralls -r ./ -b ./ -E '.*/tests/[^\.].*' -e dependencies --gcov ${CCOV} --gcov-options '\-lp' --verbose
  fi

notifications:
  email: false
  slack:
    secure: LPLuJzIXqKjQs736Z2D/qevhz3oAVdkV5NgryJG9Mu3521L/t1VwMLK2NwZTvDri2zaqZmAt2zmAyCxVtA5SlP3fYvQIOQUPGrU9mQRCTDX4jq9jZFPNaA+DAbOLklzJvGpbD0g4MH74U9HFvug/IN8A/iM8CgkgtF8CI5qd/l97ccBpCtgEdeXPByaATrNLK/rhmcTBzk0+Xl1YEavDcsuJfBaNdwNUfep0tyMS0rn2wYZwnKlNaC3b0sHGkhMyHNnj0AUoYVP/42XMFISECLEJDENy1ifZJ/xm79b+ZFsWNM+hCHF8IWK8cpbDVrGAzqOJ4fVX3rj6f+j4biErYb1gDZc8Wf5VSIWBkLr1O/LUatc49SQtwQnLwKyzG4HeebPMwt3T787buS/u5spNqhWD43qzFQcOzU/lArsv0YlgQKFHJg+d2hc6AeZSg15m7A7CxT9ikgjsH5ubZjSvbDBIipRCSGDC3zp7o6ZfSPMNfvcQuLl2i1/H1A2cwHqFUJ9+KkvhdK8QYHdjvvdkpsb3fAaf6wQQPNAsWPUFauYjPL3g5lRasEUM0ANtVrlxN8Gx5YOt6pK8+U/Pld3Om1TFZeRJ3st1roz2MjkZczHzQnOEkvqu7OkofG7vpV0ho79CMmbv+DB/sy8Z/LoKku8BwT0Xszgy0xzR5rZCkCQ=

